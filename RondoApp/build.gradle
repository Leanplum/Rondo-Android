apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

def LEANPLUM_SDK_VERSION = System.getenv("LEANPLUM_SDK_VERSION") ?: "5.7.0"

android {

    compileSdkVersion 31
    defaultConfig {
        applicationId "com.leanplum.rondo"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {

        buildTypes.each {
            it.buildConfigField "String", "LEANPLUM_SDK_VERSION", "\"${LEANPLUM_SDK_VERSION}\""
        }
        release {
            signingConfig signingConfigs.debug // sign with debug key (only for QA purposes)
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        prod {
            dimension "version"
        }
        if (findProject(':AndroidSDK') != null) {
            dev {
                dimension "version"
                getIsDefault().set(true)
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def isMiPushSupported(version) {
    // MiPush is supported from 5.6.0
    int startMajor = 5
    int startMinor = 6
    String major = version.split("\\.")[0]
    String minor = version.split("\\.")[1]
    return major.toInteger() > startMajor ||
            (major.toInteger() == startMajor && minor.toInteger() >= startMinor)
}

dependencies {

    //External Dependencies
    implementation "com.google.android.gms:play-services-location:17.0.0"
    implementation 'com.google.firebase:firebase-messaging:20.2.0' // for FCM

    // SDK from released packages (prod flavor)
    prodImplementation "com.leanplum:leanplum-core:${LEANPLUM_SDK_VERSION}"
    prodImplementation "com.leanplum:leanplum-push:${LEANPLUM_SDK_VERSION}"
    prodImplementation "com.leanplum:leanplum-location:${LEANPLUM_SDK_VERSION}"
    prodImplementation "com.leanplum:leanplum-fcm:${LEANPLUM_SDK_VERSION}"
    if (isMiPushSupported(LEANPLUM_SDK_VERSION)) {
        println "adding leanplum-mipush dependency"
        prodImplementation "com.leanplum:leanplum-mipush:${LEANPLUM_SDK_VERSION}"
    }

    // SDK from source (dev flavor)
    if (findProject(':AndroidSDK') != null) {
        devImplementation project(':AndroidSDKCore')
        devImplementation project(':AndroidSDKPush')
        devImplementation project(':AndroidSDKLocation')
        devImplementation project(':AndroidSDKFcm')
        if (findProject(':AndroidSDKMiPush') != null) {
            devImplementation project(':AndroidSDKMiPush')
        }
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Google library for app rating
    implementation 'com.google.android.play:core:1.8.2'
    // Library for scanning QR codes. Do not use latest version as it bumps minSDK.
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    // Json canonicalization for Variable Signing
    implementation 'io.github.erdtman:java-json-canonicalization:1.1'
}

apply plugin: 'com.google.gms.google-services'
